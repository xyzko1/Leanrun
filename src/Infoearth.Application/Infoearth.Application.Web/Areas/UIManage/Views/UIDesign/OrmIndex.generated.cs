#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Areas/UIManage/Views/UIDesign/OrmIndex.cshtml")]
    public partial class _Areas_UIManage_Views_UIDesign_OrmIndex_cshtml : System.Web.Mvc.WebViewPage<dynamic>
    {
        public _Areas_UIManage_Views_UIDesign_OrmIndex_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 1 "..\..\Areas\UIManage\Views\UIDesign\OrmIndex.cshtml"
  
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Index.cshtml";

            
            #line default
            #line hidden
WriteLiteral("\r\n<style");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(">\r\n    .orm_title {\r\n        color: #666666;\r\n        font-size: 16px;\r\n        h" +
"eight: 48px;\r\n        line-height: 48px;\r\n        margin-left: 15px;\r\n        fo" +
"nt-weight: bold;\r\n        padding-top:5px;\r\n \r\n    }\r\n    .orm_title_note {\r\n   " +
"     color: #999999;\r\n        height: 24px;\r\n        line-height: 24px;\r\n       " +
" margin: 0 15px;\r\n        border-bottom: 1px solid #ededed;\r\n     \r\n    }\r\n\r\n   " +
" .action_title1 {\r\n        color: #666666;\r\n        font-size: 14px;\r\n        he" +
"ight: 40px;\r\n        line-height: 40px;\r\n        padding-left: 25px;\r\n    }\r\n\r\n " +
"   .button_style a {\r\n        display: inline-block;\r\n        height: 40px;\r\n   " +
"     line-height: 40px;\r\n        padding: 0 25px;\r\n        color: #fff;\r\n    }\r\n" +
"\r\n    .button_style {\r\n        border-bottom: 1px solid #ededed;\r\n        margin" +
": 0 25px;\r\n    }\r\n    .orm_table{\r\n        width:100%;\r\n\r\n    }\r\n    .orm_table " +
"tr th{\r\n        color:#5b5b60;\r\n        height:30px;\r\n        line-height:30px;\r" +
"\n        font-size:14px;\r\n    }\r\n        .orm_table tr td{\r\n            vertical" +
"-align:top;\r\n            text-align:center;\r\n        }\r\n    .orm_item{\r\n        " +
"border:1px solid #eeeeee;\r\n        margin:10px;\r\n        text-align:center;\r\n   " +
"     padding:20px;\r\n    \r\n\r\n\r\n    }\r\n    .orm_item_title{\r\n        background:#0" +
"07aff;\r\n        padding:10px 20px;\r\n        border-radius:8px;\r\n        display:" +
"inline-block;\r\n        font-style:italic;\r\n        color:#fff;\r\n        font-siz" +
"e:24px;\r\n        font-weight:bold;\r\n    }\r\n    .orm_item_title_note {\r\n        f" +
"ont-size: 18px;\r\n        height: 48px;\r\n        line-height: 48px;\r\n    }\r\n    ." +
"orm_item_title_note1 {\r\n        color: #8e8e93;\r\n    \r\n        line-height: 24px" +
";\r\n\r\n    }\r\n    .orm_action1 {\r\n        margin: 10px;\r\n    }\r\n .orm_action {\r\n  " +
"      width: 100%;\r\n\r\n    }\r\n\r\n.orm_action tr td {\r\n            border: 1px soli" +
"d #eeeeee;\r\n            width:50%;\r\n     \r\n        }\r\n    .orm_action_title {\r\n " +
"       height: 36px;\r\n        line-height: 36px;\r\n        font-weight: bold;\r\n  " +
"      padding-left: 15px;\r\n        font-size: 14px;\r\n        color: #5b5b60;\r\n  " +
"  }\r\n</style>\r\n\r\n\r\n<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">


    //$(function () {
    //    InitialPage();




    //});
    //初始化页面
    //function InitialPage() {
       
    //    $(window).resize(function (e) {
    //        window.setTimeout(function () {
    //            $('#abc').height($(window).height() - 20);
    //        }, 200);
    //        e.stopPropagation();
    //    });
    //}



</script>





<div");

WriteLiteral(" style=\" margin:10px;\"");

WriteLiteral(" id=\"abc\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" style=\"background:#fff; margin-bottom:10px;\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"orm_title\"");

WriteLiteral(">新框架快速开发指引</div>\r\n        <div");

WriteLiteral(" class=\"orm_title_note\"");

WriteLiteral(">New Framework Rapid Development Guidelines</div>\r\n        <div");

WriteLiteral(" class=\"orm_title_note\"");

WriteLiteral(" style=\"border-bottom:none;\"");

WriteLiteral(">\r\n            本框架前端基于angular的MVC结构，属于单页应用。控件基于clip_two的风格。\r\n\r\n            后台是基于D" +
"DD架构的ABP框架。为了更快速，更准确地把该框架运用到各业务系统中去，开发指引顺势而生。\r\n        </div>\r\n\r\n        <div");

WriteLiteral(" style=\"border-bottom:2px solid #ee8339; margin:15px 0;\"");

WriteLiteral("></div>\r\n        <table");

WriteLiteral(" class=\"orm_table\"");

WriteLiteral(">\r\n            <thead><tr><th>框架结构图</th><th>前端结构图</th></tr></thead>\r\n            " +
"<tbody>\r\n                <tr>\r\n                    <td>\r\n                       " +
" <img");

WriteAttribute("src", Tuple.Create(" src=\"", 3339), Tuple.Create("\"", 3386)
, Tuple.Create(Tuple.Create("", 3345), Tuple.Create<System.Object, System.Int32>(Href("~/Content/adminDefault/img/mainPage02.jpg")
, 3345), false)
);

WriteLiteral(" />\r\n                    </td>\r\n                    <td>\r\n                       " +
" <img");

WriteAttribute("src", Tuple.Create(" src=\"", 3473), Tuple.Create("\"", 3520)
, Tuple.Create(Tuple.Create("", 3479), Tuple.Create<System.Object, System.Int32>(Href("~/Content/adminDefault/img/mainPage01.jpg")
, 3479), false)
);

WriteLiteral(" />\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n    " +
"    </table>\r\n\r\n    </div>\r\n    <div");

WriteLiteral("  style=\"background: #fff; margin-bottom: 10px;\"");

WriteLiteral(">\r\n     <table");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\r\n         <tr>\r\n         <td>\r\n             <div");

WriteLiteral(" class=\"orm_item\"");

WriteLiteral(">\r\n              \r\n                     <span");

WriteLiteral(" class=\"orm_item_title\"");

WriteLiteral(">1</span>\r\n                     <div");

WriteLiteral(" class=\"orm_item_title_note\"");

WriteLiteral(">创建路由</div>\r\n                     <div");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">创建路由的文件位于App/Main/assets/js/config.router.js 中。</div>\r\n               \r\n        " +
"     </div>\r\n             </td>\r\n         <td>\r\n             <div");

WriteLiteral(" class=\"orm_item\"");

WriteLiteral(">\r\n             \r\n                     <span");

WriteLiteral(" class=\"orm_item_title\"");

WriteLiteral(">2</span>\r\n                     <div");

WriteLiteral(" class=\"orm_item_title_note\"");

WriteLiteral(">创建软加载</div>\r\n                     <div");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">创建软加载的文件位于App/Main/assets/js/config.constant.js中。</div>\r\n                 </div>" +
"\r\n         </td>\r\n         <td>\r\n             <div");

WriteLiteral(" class=\"orm_item\"");

WriteLiteral(">\r\n\r\n                 <span");

WriteLiteral(" class=\"orm_item_title\"");

WriteLiteral(">3</span>\r\n                 <div");

WriteLiteral(" class=\"orm_item_title_note\"");

WriteLiteral(">创建导航栏目</div>\r\n                 <div");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">创建导航栏目的文件位于App/Main/assets/views/partials/nav.html中。</div>\r\n                 </d" +
"iv>\r\n\r\n</td>\r\n         <td>\r\n             <div");

WriteLiteral(" class=\"orm_item\"");

WriteLiteral(">\r\n               \r\n                     <span");

WriteLiteral(" class=\"orm_item_title\"");

WriteLiteral(">4</span>\r\n                     <div");

WriteLiteral(" class=\"orm_item_title_note\"");

WriteLiteral(">创建控制器和模板</div>\r\n                     <div");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">根据路由中设置的模板路径和软加载中设置的控制器路径，创建控制器.js文件和模板.html文件。</div>\r\n                \r\n       " +
"          </div>\r\n         </td>\r\n         </tr>\r\n     </table>\r\n      \r\n\r\n     " +
"\r\n      \r\n\r\n    </div>\r\n\r\n    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(" style=\"background: #fff; margin-bottom: 10px;\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"orm_action1\"");

WriteLiteral(">\r\n\r\n\r\n            <table");

WriteLiteral(" class=\"orm_action\"");

WriteLiteral(">\r\n\r\n\r\n                <tr>\r\n                    <td");

WriteLiteral(" class=\"orm_action_title\"");

WriteLiteral(">\r\n                        一、创建路由\r\n                    </td>\r\n                   " +
" <td");

WriteLiteral(" class=\"orm_action_title\"");

WriteLiteral(">示例</td>\r\n                </tr>\r\n                <tr>\r\n                    <td><d" +
"iv");

WriteLiteral(" style=\"padding:15px;\"");

WriteLiteral(">\r\n    <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">创建路由的文件位于App/Main/assets/js/config.router.js 中。</p>\r\n\r\n    <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral("><b>调用</b></p>\r\n\r\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                需要调用状态配置$stateProvider对象的state()方法,该方法需要传入两个参数" +
"：分别是路由名称和配置对象。</p>\r\n\r\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                参数说明:</p>\r\n\r\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                1)路由名称是string类型且与其对应的ui-sref=\"xxx\"的名字是相同的,另外多级" +
"路由需要用点号分开。</p>\r\n\r\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                2)配置对象是object类型,有如下成员:</p>\r\n\r\n                " +
"            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                {url:\"\",template:\"\",templateUrl:\"\", resolve:{}" +
",title:\"\",parentPage:\"\", abstract:true}。</p>\r\n\r\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                其中url是当前路由级别下的路径，template是html模板。</p>\r\n\r\n     " +
"                       <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                templateUrl是模板路径,不必同时使用template和templateUrl。</" +
"p>\r\n\r\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                resolve是软加载js、css等文件。</p>\r\n\r\n                 " +
"           <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                title是标题,parentPage是父页面的路由字符串,仅在启用面包屑导航时使用。</p" +
">\r\n\r\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                abstract:true表明此路由不能被显性激活,只能被子状态隐性激活。</p>\r\n\r\n " +
"                           <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral("> abstract:true表明此路由不能被显性激活,只能被子状态隐性激活。</p>\r\n</div>\r\n                    </td>\r\n " +
"                   <td>\r\n                        <div");

WriteLiteral(" style=\"padding:15px;\"");

WriteLiteral(">\r\n                            <img");

WriteAttribute("src", Tuple.Create(" src=\"", 7468), Tuple.Create("\"", 7515)
, Tuple.Create(Tuple.Create("", 7474), Tuple.Create<System.Object, System.Int32>(Href("~/Content/adminDefault/img/mainPage03.jpg")
, 7474), false)
);

WriteLiteral(" />\r\n</div>\r\n</td>\r\n                </tr>\r\n\r\n            </table>\r\n\r\n\r\n        </" +
"div>\r\n        \r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n\r\n    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(" style=\"background: #fff; margin-bottom: 10px;\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"orm_action1\"");

WriteLiteral(">\r\n\r\n\r\n            <table");

WriteLiteral(" class=\"orm_action\"");

WriteLiteral(">\r\n\r\n\r\n                <tr>\r\n                    <td");

WriteLiteral(" class=\"orm_action_title\"");

WriteLiteral(">\r\n                        二、创建软加载\r\n                    </td>\r\n                  " +
"  <td");

WriteLiteral(" class=\"orm_action_title\"");

WriteLiteral(">示例</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n" +
"                        <div");

WriteLiteral(" style=\"padding:15px;\"");

WriteLiteral(">\r\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">创建软加载的文件位于App/Main/assets/js/config.constant.js中。</p>\r\n\r\n                       " +
"     <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral("><b>为scripts属性添加成员</b></p>\r\n\r\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                找到js文件夹下面的config.constant.js并为scripts对象添加新的key" +
"和value.\r\n                            </p>\r\n\r\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(@">
                                key是有意义的取名,且须在你路由文件的loadSequence()方法中调用。
                                value是软加载的资源文件路径。
                            </p>
                         
                        </div>
                    </td>
                    <td>
                        <div");

WriteLiteral(" style=\"padding:15px;\"");

WriteLiteral(">\r\n                            <img");

WriteAttribute("src", Tuple.Create(" src=\"", 8918), Tuple.Create("\"", 8965)
, Tuple.Create(Tuple.Create("", 8924), Tuple.Create<System.Object, System.Int32>(Href("~/Content/adminDefault/img/mainPage04.jpg")
, 8924), false)
);

WriteLiteral(" />\r\n                        </div>\r\n                    </td>\r\n                <" +
"/tr>\r\n\r\n            </table>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n\r\n" +
"    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(" style=\"background: #fff; margin-bottom: 10px;\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"orm_action1\"");

WriteLiteral(">\r\n\r\n\r\n            <table");

WriteLiteral(" class=\"orm_action\"");

WriteLiteral(">\r\n\r\n\r\n                <tr>\r\n                    <td");

WriteLiteral(" class=\"orm_action_title\"");

WriteLiteral(">\r\n                        三、创建导航栏目\r\n                    </td>\r\n                 " +
"   <td");

WriteLiteral(" class=\"orm_action_title\"");

WriteLiteral(">示例</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n" +
"                        <div");

WriteLiteral(" style=\"padding:15px;\"");

WriteLiteral(">\r\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">创建导航栏目的文件位于App/Main/assets/views/partials/nav.html中。</p>\r\n\r\n                    " +
"        <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral("><b>添加HTML代码</b></p>\r\n\r\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                在< ul");

WriteLiteral(" class=\"main-navigation-menu\"");

WriteLiteral(">< /ul>节点下添加html代码。\r\n                            </p>\r\n\r\n                        " +
"    <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                设置li的ng-class=\"{\'active\':$state.includes(\'app." +
"xxxxxx\')}\"。\r\n                            </p>\r\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                通过设置< i");

WriteLiteral(" class=\"icon xxx\"");

WriteLiteral(">< /i>节点的class属性来实现设置导航的不同的图标。\r\n                            </p>\r\n               " +
"             <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                同样通过< span");

WriteLiteral(" class=\"title\"");

WriteLiteral(">text< /span >节点里text来设置导航的文字内容。\r\n                            </p>\r\n             " +
"               <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                对二级目录须在一级目录li节点中再加上< ul");

WriteLiteral(" class=\"sub-menu\"");

WriteLiteral(" >\r\n                                    节点\r\n\r\n                                   " +
" 对子级目录或者无子级的目录须设置li的ui-sref-active=”active”，且须设置a节点的ui-sref=”app.xxxx.xxxx”，\r\n\r\n" +
"                                    即点击跳转的路由，同样须设置\r\n                            " +
"       < span");

WriteLiteral(" class=\"title\"");

WriteLiteral(" >text< /span >节点的文本。\r\n</p>\r\n                        </div>\r\n                    " +
"</td>\r\n                    <td>\r\n                        <div");

WriteLiteral(" style=\"padding:15px;\"");

WriteLiteral(">\r\n                            <img");

WriteAttribute("src", Tuple.Create(" src=\"", 11142), Tuple.Create("\"", 11189)
, Tuple.Create(Tuple.Create("", 11148), Tuple.Create<System.Object, System.Int32>(Href("~/Content/adminDefault/img/mainPage05.jpg")
, 11148), false)
);

WriteLiteral(" />\r\n                        </div>\r\n                    </td>\r\n                <" +
"/tr>\r\n\r\n            </table>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n  " +
"  <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(" style=\"background: #fff; margin-bottom: 10px;\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"orm_action1\"");

WriteLiteral(">\r\n\r\n\r\n            <table");

WriteLiteral(" class=\"orm_action\"");

WriteLiteral(">\r\n\r\n\r\n                <tr>\r\n                    <td");

WriteLiteral(" class=\"orm_action_title\"");

WriteLiteral(">\r\n                        四、创建控制器和模板\r\n                    </td>\r\n               " +
"     <td");

WriteLiteral(" class=\"orm_action_title\"");

WriteLiteral(">示例</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n" +
"                        <div");

WriteLiteral(" style=\"padding:15px;\"");

WriteLiteral(">\r\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">根据路由中设置的模板路径和软加载中设置的控制器路径，创建控制器.js文件和模板.html文件。</p>\r\n\r\n                         " +
"   <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral("><b>内容</b></p>\r\n\r\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                在控制器文件中添加控件器的方法体, 注意一下控制器的命名和依赖注入即可。\r\n        " +
"                    </p>\r\n\r\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                在模板文件中添加一个DIV层,并设置DIV层的ng-controller属性等于控制器的命名" +
"。\r\n                            </p>                      \r\n                     " +
"   </div>\r\n                    </td>\r\n                    <td>\r\n                " +
"        <div");

WriteLiteral(" style=\"padding:15px;\"");

WriteLiteral(">\r\n                            <img");

WriteAttribute("src", Tuple.Create(" src=\"", 12549), Tuple.Create("\"", 12596)
, Tuple.Create(Tuple.Create("", 12555), Tuple.Create<System.Object, System.Int32>(Href("~/Content/adminDefault/img/mainPage06.jpg")
, 12555), false)
);

WriteLiteral(" />\r\n                        </div>\r\n                    </td>\r\n                <" +
"/tr>\r\n\r\n            </table>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n  " +
"  <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(" style=\"background: #fff; margin-bottom: 10px;\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"orm_action1\"");

WriteLiteral(">\r\n\r\n\r\n            <table");

WriteLiteral(" class=\"orm_action\"");

WriteLiteral(">\r\n\r\n\r\n                <tr>\r\n                    <td");

WriteLiteral(" class=\"orm_action_title\"");

WriteLiteral(">\r\n                        *后台WebApi调用注意事项*\r\n                    </td>\r\n         " +
"           <td");

WriteLiteral(" class=\"orm_action_title\"");

WriteLiteral(">后台代码</td>\r\n                </tr>\r\n                <tr>\r\n                    <td");

WriteLiteral(" rowspan=\"3\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" style=\"padding:15px;\"");

WriteLiteral(">\r\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">后台APP控制层方法如图所示。</p>\r\n\r\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral("><b>前端调用</b></p>\r\n\r\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                在前端控制器中注入\"abp.services.app.layerManager\"，用变量名l" +
"ayerManager调用getAllTest()方法，请求后台完成后在success()回调方法中返回数据。\r\n                       " +
"     </p>\r\n\r\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                前端完整代码如图所示。\r\n                            </p>\r" +
"\n                            <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n                                注意命名规范：后台——大驼峰；前端——小驼峰。\r\n                     " +
"       </p>\r\n                        </div>\r\n                    </td>\r\n        " +
"            <td>\r\n                        <div");

WriteLiteral(" style=\"padding:15px;\"");

WriteLiteral(">\r\n                            <img");

WriteAttribute("src", Tuple.Create(" src=\"", 14106), Tuple.Create("\"", 14153)
, Tuple.Create(Tuple.Create("", 14112), Tuple.Create<System.Object, System.Int32>(Href("~/Content/adminDefault/img/mainPage07.jpg")
, 14112), false)
);

WriteLiteral(" style=\"max-width:500px\"");

WriteLiteral("  />\r\n                        </div>\r\n                    </td>\r\n                " +
"</tr>\r\n                <tr><td");

WriteLiteral(" class=\"orm_action_title\"");

WriteLiteral(">前端代码</td></tr>\r\n                <tr><td><div");

WriteLiteral(" style=\"padding:15px;\"");

WriteLiteral(">\r\n                            <img");

WriteAttribute("src", Tuple.Create(" src=\"", 14416), Tuple.Create("\"", 14463)
, Tuple.Create(Tuple.Create("", 14422), Tuple.Create<System.Object, System.Int32>(Href("~/Content/adminDefault/img/mainPage08.jpg")
, 14422), false)
);

WriteLiteral(" style=\"max-width:500px\"");

WriteLiteral(" />\r\n</div></td></tr>\r\n\r\n            </table>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n  " +
"  </div>\r\n\r\n\r\n\r\n    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(" style=\"background: #fff; margin-bottom: 10px;\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"orm_action1\"");

WriteLiteral(">\r\n\r\n\r\n            <table");

WriteLiteral(" class=\"orm_action\"");

WriteLiteral(">\r\n\r\n\r\n                <tr>\r\n                    <td><div");

WriteLiteral(" style=\"padding:15px;\"");

WriteLiteral(">\r\n    <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral("><b");

WriteLiteral(" style=\"font-size:14px;\"");

WriteLiteral(">部署注意事项</b></p>\r\n\r\n\r\n    <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n        控件的js和css样式文件在内外网的引用地址如下：\r\n    </p>\r\n\r\n    <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n        外网引用地址：\r\n    </p>\r\n\r\n    <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n        http://cpdzhjt.infoearth.com:8001/cdn/v1.0/control.lib.min.js\r\n    </p" +
">\r\n\r\n    <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n        http://cpdzhjt.infoearth.com:8001/cdn/v1.0/control.lib.min.css\r\n    </" +
"p>\r\n\r\n    <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n        内网引用地址：\r\n    </p>\r\n\r\n    <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n        http://192.168.100.69:8001/cdn/v1.0/control.lib.min.js\r\n    </p>\r\n\r\n  " +
"  <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">\r\n        http://192.168.100.69:8001/cdn/v1.0/control.lib.min.css\r\n    </p>\r\n\r\n " +
"   <p");

WriteLiteral(" class=\"orm_item_title_note1\"");

WriteLiteral(">   注：若须单独部署，则需要下载js和css样式文件到本地，并在相关页面进行引用。</p>\r\n</div>\r\n</td>\r\n                \r" +
"\n                </tr>\r\n            \r\n\r\n            </table>\r\n\r\n\r\n     \r\n\r\n     " +
"   </div>\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n");

        }
    }
}
#pragma warning restore 1591
