#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Areas/FlowManage/Views/FlowDesign/FlowSchemeDesigner.cshtml")]
    public partial class _Areas_FlowManage_Views_FlowDesign_FlowSchemeDesigner_cshtml : System.Web.Mvc.WebViewPage<dynamic>
    {
        public _Areas_FlowManage_Views_FlowDesign_FlowSchemeDesigner_cshtml()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n");

            
            #line 6 "..\..\Areas\FlowManage\Views\FlowDesign\FlowSchemeDesigner.cshtml"
  
    ViewBag.Title = "流程设计器";
    Layout = "~/Views/Shared/_FlowForm.cshtml";

            
            #line default
            #line hidden
WriteLiteral(@"
<style>
.standtab-pane{width:224px;border-right:1px solid #ccc;float:left}
.SchemeAuthorizePanel{width:828px;float:left;display:none}
.card-box.active{background:url(../../Content/Images/item_close.png) right top no-repeat!important}
.frmTypeSystemTr{display:none}
</style>

<div");

WriteLiteral(" class=\"widget-body\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" id=\"wizard\"");

WriteLiteral(" class=\"wizard\"");

WriteLiteral(" data-target=\"#wizard-steps\"");

WriteLiteral(">\r\n        <ul");

WriteLiteral(" class=\"steps\"");

WriteLiteral(">\r\n            <li");

WriteLiteral(" data-target=\"#step-1\"");

WriteLiteral(" class=\"active\"");

WriteLiteral("><span");

WriteLiteral(" class=\"step\"");

WriteLiteral(">1</span>基本配置<span");

WriteLiteral(" class=\"chevron\"");

WriteLiteral("></span></li>\r\n            <li");

WriteLiteral(" data-target=\"#step-2\"");

WriteLiteral("><span");

WriteLiteral(" class=\"step\"");

WriteLiteral(">2</span>权限设置<span");

WriteLiteral(" class=\"chevron\"");

WriteLiteral("></span></li>\r\n            <li");

WriteLiteral(" data-target=\"#step-3\"");

WriteLiteral("><span");

WriteLiteral(" class=\"step\"");

WriteLiteral(">3</span>流程设计<span");

WriteLiteral(" class=\"chevron\"");

WriteLiteral("></span></li>\r\n            <li");

WriteLiteral(" data-target=\"#step-4\"");

WriteLiteral("><span");

WriteLiteral(" class=\"step\"");

WriteLiteral(">4</span>创建完成<span");

WriteLiteral(" class=\"chevron\"");

WriteLiteral("></span></li>\r\n        </ul>\r\n    </div>\r\n    <div");

WriteLiteral(" class=\"step-content wizard-step-content\"");

WriteLiteral(" id=\"wizard-steps\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"step-pane wizard-step-pane active\"");

WriteLiteral(" id=\"step-1\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"alert alert-danger\"");

WriteLiteral(" style=\"text-align: left; margin-bottom: 10px;\"");

WriteLiteral(">\r\n                <i");

WriteLiteral(" class=\"fa fa-warning alert-dismissible\"");

WriteLiteral(" style=\"position: relative; top: 1px; font-size: 15px; padding-right: 5px;\"");

WriteLiteral("></i>\r\n                请你创建流程信息，用于创建或修改流程！\r\n            </div>\r\n            <div");

WriteLiteral(" class=\"panel panel-default\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"panel-heading\"");

WriteLiteral(">\r\n                    <h3");

WriteLiteral(" class=\"panel-title\"");

WriteLiteral(">流程基本信息配置</h3>\r\n                </div>\r\n                <div");

WriteLiteral(" class=\"panel-body\"");

WriteLiteral(">\r\n                    <table");

WriteLiteral(" class=\"form\"");

WriteLiteral(">\r\n                        <tr>\r\n                            <td");

WriteLiteral(" class=\"formTitle\"");

WriteLiteral(">流程编号<font");

WriteLiteral(" face=\"宋体\"");

WriteLiteral(">*</font></td>\r\n                            <td");

WriteLiteral(" class=\"formValue\"");

WriteLiteral(">\r\n                                <input");

WriteLiteral(" id=\"F_SchemeCode\"");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"form-control\"");

WriteLiteral(" placeholder=\"请输入流程编号\"");

WriteLiteral(" isvalid=\"yes\"");

WriteLiteral(" checkexpession=\"NotNull\"");

WriteLiteral(" />\r\n                            </td>\r\n                        </tr>\r\n          " +
"              <tr>\r\n                            <td");

WriteLiteral(" class=\"formTitle\"");

WriteLiteral(">流程名称<font");

WriteLiteral(" face=\"宋体\"");

WriteLiteral(">*</font></td>\r\n                            <td");

WriteLiteral(" class=\"formValue\"");

WriteLiteral(">\r\n                                <input");

WriteLiteral(" id=\"F_SchemeName\"");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"form-control\"");

WriteLiteral(" placeholder=\"请输入流程名称\"");

WriteLiteral(" isvalid=\"yes\"");

WriteLiteral(" checkexpession=\"NotNull\"");

WriteLiteral(" />\r\n                            </td>\r\n                        </tr>\r\n          " +
"              <tr>\r\n                            <td");

WriteLiteral(" class=\"formTitle\"");

WriteLiteral(">流程分类<font");

WriteLiteral(" face=\"宋体\"");

WriteLiteral(">*</font></td>\r\n                            <td");

WriteLiteral(" class=\"formValue\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" id=\"F_SchemeType\"");

WriteLiteral(" type=\"selectTree\"");

WriteLiteral(" class=\"ui-select\"");

WriteLiteral(" isvalid=\"yes\"");

WriteLiteral(" checkexpession=\"NotNull\"");

WriteLiteral("></div>\r\n                            </td>\r\n                        </tr>\r\n      " +
"                  <tr>\r\n                            <td");

WriteLiteral(" class=\"formTitle\"");

WriteLiteral(">所属功能</td>\r\n                            <td");

WriteLiteral(" class=\"formValue\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" id=\"F_ModuleId\"");

WriteLiteral(" type=\"selectTree\"");

WriteLiteral(" class=\"ui-select\"");

WriteLiteral("></div>\r\n                            </td>\r\n                        </tr>\r\n      " +
"                  <tr>\r\n                            <th");

WriteLiteral(" class=\"formTitle formTitle-top\"");

WriteLiteral(">\r\n                                备注\r\n                            </th>\r\n       " +
"                     <td");

WriteLiteral(" class=\"formValue\"");

WriteLiteral(">\r\n                                <textarea");

WriteLiteral(" id=\"F_Description\"");

WriteLiteral(" class=\"form-control\"");

WriteLiteral("></textarea>\r\n                            </td>\r\n                        </tr>\r\n " +
"                   </table>\r\n                </div>\r\n            </div>\r\n       " +
" </div>\r\n        <div");

WriteLiteral(" class=\"step-pane \"");

WriteLiteral(" id=\"step-2\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"bottomline\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"rdio rdio-color_a\"");

WriteLiteral("><input");

WriteLiteral(" name=\"AuthorizeType\"");

WriteLiteral(" value=\"0\"");

WriteLiteral(" id=\"ShcemeAuthorize0\"");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" checked /><label");

WriteLiteral(" for=\"ShcemeAuthorize0\"");

WriteLiteral(">所有成员</label></div>\r\n                <div");

WriteLiteral(" class=\"rdio rdio-color_a\"");

WriteLiteral("><input");

WriteLiteral(" name=\"AuthorizeType\"");

WriteLiteral(" value=\"1\"");

WriteLiteral(" id=\"ShcemeAuthorize1\"");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" /><label");

WriteLiteral(" for=\"ShcemeAuthorize1\"");

WriteLiteral(">指定成员</label></div>\r\n                <div");

WriteLiteral(" class=\"rdio rdio-color_a\"");

WriteLiteral("><input");

WriteLiteral(" name=\"AuthorizeType\"");

WriteLiteral(" value=\"2\"");

WriteLiteral(" id=\"ShcemeAuthorize2\"");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" /><label");

WriteLiteral(" for=\"ShcemeAuthorize2\"");

WriteLiteral(">不在发起流程页显示</label></div>\r\n            </div>\r\n            <div");

WriteLiteral(" id=\"DesignateMember\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"standtabborder\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" class=\"standtab  standtabactived\"");

WriteLiteral(" onclick=\"learun.changeStandTab({ obj: this, id: \'Role\' })\"");

WriteLiteral(">\r\n                        角色\r\n                    </div>\r\n                    <d" +
"iv");

WriteLiteral(" class=\"standtab \"");

WriteLiteral(" onclick=\"learun.changeStandTab({ obj: this, id: \'Post\' })\"");

WriteLiteral(">\r\n                        岗位\r\n                    </div>\r\n                    <d" +
"iv");

WriteLiteral(" class=\"standtab \"");

WriteLiteral(" onclick=\"learun.changeStandTab({ obj: this, id: \'UserGroup\' })\"");

WriteLiteral(">\r\n                        用户组\r\n                    </div>\r\n                    <" +
"div");

WriteLiteral(" class=\"standtab \"");

WriteLiteral(" onclick=\"learun.changeStandTab({ obj: this, id: \'User\' })\"");

WriteLiteral(">\r\n                        用户\r\n                    </div>\r\n                </div>" +
"\r\n                <div");

WriteLiteral(" id=\"Role\"");

WriteLiteral(" class=\"standtab-pane\"");

WriteLiteral("></div>\r\n                <div");

WriteLiteral(" id=\"Post\"");

WriteLiteral(" style=\"display: none;\"");

WriteLiteral(" class=\"standtab-pane\"");

WriteLiteral("></div>\r\n                <div");

WriteLiteral(" id=\"UserGroup\"");

WriteLiteral(" style=\"display: none;\"");

WriteLiteral(" class=\"standtab-pane\"");

WriteLiteral("></div>\r\n                <div");

WriteLiteral(" id=\"User\"");

WriteLiteral(" style=\"display: none;\"");

WriteLiteral(" class=\"standtab-pane\"");

WriteLiteral("></div>\r\n\r\n                <div");

WriteLiteral(" id=\"DesignateMemberlist\"");

WriteLiteral(" style=\"margin: 0px; border-right: none; border-left: none; border-bottom: none; " +
"background-color: #fff; overflow: auto; padding-bottom: 10px;height:528px;\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" id=\"RoleDiv\"");

WriteLiteral(" class=\"SchemeAuthorizePanel\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\"flow-portal-panel-title\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-paw\"");

WriteLiteral("></i>&nbsp;&nbsp;角色</div>\r\n                    </div>\r\n                    <div");

WriteLiteral(" id=\"PostDiv\"");

WriteLiteral(" class=\"SchemeAuthorizePanel\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\"flow-portal-panel-title\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-graduation-cap\"");

WriteLiteral("></i>&nbsp;&nbsp;岗位</div>\r\n                    </div>\r\n                    <div");

WriteLiteral(" id=\"UserGroupDiv\"");

WriteLiteral(" class=\"SchemeAuthorizePanel\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\"flow-portal-panel-title\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-group\"");

WriteLiteral("></i>&nbsp;&nbsp;用户组</div>\r\n                    </div>\r\n                    <div");

WriteLiteral(" id=\"UserDiv\"");

WriteLiteral(" class=\"SchemeAuthorizePanel\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\"flow-portal-panel-title\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-user\"");

WriteLiteral("></i>&nbsp;&nbsp;用户</div>\r\n                    </div>\r\n                </div>\r\n  " +
"              <div");

WriteLiteral(" id=\"Treebackground\"");

WriteLiteral(" style=\"position: fixed; top: 91px; left: 0px; z-index: 2; width: 1100px; height:" +
" 528px; background: #000; filter: alpha(opacity=10); opacity: 0.1;\"");

WriteLiteral("></div>\r\n            </div>\r\n        </div>\r\n        <div");

WriteLiteral(" class=\"step-pane\"");

WriteLiteral(" id=\"step-3\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" id=\"FlowPanel\"");

WriteLiteral(" style=\"margin: 0px;\"");

WriteLiteral("></div>\r\n        </div>\r\n        <div");

WriteLiteral(" class=\"step-pane\"");

WriteLiteral(" id=\"step-4\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"drag-tip\"");

WriteLiteral(">\r\n                <i");

WriteLiteral(" class=\"fa fa-check-circle\"");

WriteLiteral("></i>\r\n                <p>设计完成,请点击保存</p>\r\n            </div>\r\n        </div>\r\n   " +
" </div>\r\n    <div");

WriteLiteral(" class=\"form-button\"");

WriteLiteral(" id=\"wizard-actions\"");

WriteLiteral(">\r\n        <a");

WriteLiteral(" id=\"btn_last\"");

WriteLiteral(" disabled");

WriteLiteral(" class=\"btn btn-default btn-prev\"");

WriteLiteral(">上一步</a>\r\n        <a");

WriteLiteral(" id=\"btn_next\"");

WriteLiteral(" class=\"btn btn-default btn-next\"");

WriteLiteral(">下一步</a>\r\n        <a");

WriteLiteral(" id=\"btn_draft\"");

WriteLiteral(" class=\"btn btn-info\"");

WriteLiteral(">保存草稿</a>\r\n        <a");

WriteLiteral(" id=\"btn_finish\"");

WriteLiteral(" disabled");

WriteLiteral(" class=\"btn btn-success\"");

WriteLiteral(">保存</a>\r\n    </div>\r\n</div>\r\n\r\n<script>\r\n    (function ($) {\r\n        \"use strict" +
"\";\r\n        \r\n        $.indexJs = {\r\n            schemeInfoId: false,\r\n         " +
"   postData: {},\r\n            formDataList: [],\r\n            formContentData: {}" +
",//表单字段数据\r\n            focusForm: [],\r\n            initialPage: function () {//初" +
"始化页面的元素\r\n                //初始化页面大小\r\n                $(\'#step-1 .panel-body\').hei" +
"ght($(window).height() - 228);\r\n                $(\'#step-1 textarea\').height($(w" +
"indow).height() - 385);\r\n                $(\'#step-2 .standtabborder\').height($(w" +
"indow).height() - 131);\r\n                $(\'#DesignateMemberlist\').height($(wind" +
"ow).height() - 141);\r\n                $(\"#Treebackground\").height($(window).heig" +
"ht() - 130);\r\n                //导向初始化\r\n                $(\'#wizard\').wizard().on(" +
"\'change\', function (e, data) {\r\n                    var $finish = $(\"#btn_finish" +
"\");\r\n                    var $next = $(\"#btn_next\");\r\n                    if (da" +
"ta.direction == \"next\") {\r\n                        switch (data.step) {\r\n       " +
"                     case 1:\r\n                                if (!$.indexJs.ste" +
"p.baseInfo.bind())\r\n                                {\r\n                         " +
"           return false;\r\n                                }\r\n                   " +
"             break;\r\n                            case 2://流程模板权限设置\r\n            " +
"                    $.indexJs.step.authorizeInfo.bind();\r\n                      " +
"          break;\r\n                            case 3://流程设计\r\n                   " +
"             if (!$.indexJs.step.workFlowInfo.bind()) {\r\n                       " +
"             return false;\r\n                                }\r\n                 " +
"               $finish.removeAttr(\'disabled\');\r\n                                " +
"$next.attr(\'disabled\', \'disabled\');\r\n                                $(\'#btn_cao" +
"gao\').attr(\'disabled\', \'disabled\');\r\n                                break;\r\n   " +
"                         default:\r\n                                break;\r\n     " +
"                   }\r\n                    } else {\r\n                        $fin" +
"ish.attr(\'disabled\', \'disabled\');\r\n                        $next.removeAttr(\'dis" +
"abled\');\r\n                        $(\'#btn_caogao\').removeAttr(\'disabled\');\r\n    " +
"                }\r\n                });\r\n\r\n                $.indexJs.step.baseInf" +
"o.initial();\r\n                $.indexJs.step.authorizeInfo.initial();\r\n         " +
"       $.indexJs.step.workFlowInfo.initial();\r\n                $.indexJs.initDat" +
"a();\r\n\r\n                $(\'#btn_finish\').on(\'click\', $.indexJs.btn.finishBtn);\r\n" +
"                $(\'#btn_draft\').on(\'click\', $.indexJs.btn.draftBtn);\r\n          " +
"  },\r\n            initData: function () {\r\n                $.indexJs.schemeInfoI" +
"d = learun.request(\'keyValue\');\r\n                learun.setForm({\r\n             " +
"       url: \"../../FormManage/FormModule/GetTreeJson\",\r\n                    succ" +
"ess: function (data) {\r\n                        $.indexJs.formDataList = data;\r\n" +
"                    }\r\n                });\r\n                if (!!$.indexJs.sche" +
"meInfoId) {\r\n                    learun.setForm({\r\n                        url: " +
"\"../../FlowManage/FlowDesign/GetFormJson\",\r\n                        param: { key" +
"Value: $.indexJs.schemeInfoId },\r\n                        success: function (dat" +
"a) {\r\n                            $(\"#step-1\").SetWebControls(data.schemeinfo);\r" +
"\n                            $.indexJs.step.authorizeInfo.set(data.schemeinfo.F_" +
"AuthorizeType, data.authorize);\r\n                            $.indexJs.step.work" +
"FlowInfo.setFlowData(JSON.parse(data.schemeinfo.F_SchemeContent));\r\n            " +
"            }\r\n                    });\r\n                };\r\n            },\r\n    " +
"        step: {\r\n                baseInfo: {\r\n                    initial: funct" +
"ion () {\r\n                        //流程类型\r\n                        $(\"#F_SchemeTy" +
"pe\").ComboBoxTree({\r\n                            description: \"==请选择==\",\r\n      " +
"                      height: \"291px\",\r\n                            param: { EnC" +
"ode: \"FlowSort\" },\r\n                            url: \"../../SystemManage/DataIte" +
"mDetail/GetDataItemTreeJson\",\r\n                            allowSearch: true\r\n  " +
"                      });\r\n                        //获取系统模块\r\n                   " +
"     $(\"#F_ModuleId\").comboBoxTree({\r\n                            description: \"" +
"==请选择==\",\r\n                            maxHeight: \"250px\",\r\n                    " +
"        url: \"../../AuthorizeManage/Module/GetTreeJson\",\r\n                      " +
"      allowSearch: true\r\n                        });\r\n                    },\r\n  " +
"                  bind: function () {\r\n                        if (!$(\'#step-1\')" +
".Validform()) {\r\n                            return false;\r\n                    " +
"    }\r\n                        $.indexJs.postData = $.extend($.indexJs.postData," +
" $(\"#step-1\").GetWebControls());\r\n                        return true;\r\n        " +
"            }\r\n                },\r\n                authorizeInfo: {\r\n           " +
"         allDataJson: {},\r\n                    members:\"\",\r\n                    " +
"initial: function () {\r\n                        $.indexJs.step.authorizeInfo.ini" +
"tialTree(\'Role\');\r\n                        $.indexJs.step.authorizeInfo.initialT" +
"ree(\'Post\');\r\n                        $.indexJs.step.authorizeInfo.initialTree(\'" +
"UserGroup\');\r\n                        $.indexJs.step.authorizeInfo.initialTree(\'" +
"User\');\r\n                        $(\'input[name=\"AuthorizeType\"]\').click(function" +
" () {\r\n                            var _value = $(this).val();\r\n                " +
"            if (_value == \"1\") {\r\n                                $(\"#Treebackgr" +
"ound\").hide();\r\n                            }\r\n                            else " +
"{\r\n                                $(\"#Treebackground\").show();\r\n               " +
"             }\r\n                        });\r\n                    },\r\n           " +
"         initialTree: function (type) {\r\n                        $.SetForm({\r\n  " +
"                          url: \"../../FlowManage/FlowDesign/Get\" + type + \"Check" +
"TreeJson\",\r\n                            success: function (data) {\r\n            " +
"                    $.indexJs.step.authorizeInfo.allDataJson[type] = learun.arra" +
"yCopy(data);\r\n                                var item = {\r\n                    " +
"                height: $(window).height() - 131,\r\n                             " +
"       showcheck: true,\r\n                                    data: data,\r\n      " +
"                              oncheckboxclick: function (item, et, s) {\r\n       " +
"                                 var $item = $(\"#\" + item.mytype + \"Div\");\r\n    " +
"                                    if (et == 1) {//勾选\r\n                        " +
"                    var mytype = \"\";\r\n                                          " +
"  var _html = \"\";\r\n                                            var _title = \'\';\r" +
"\n                                            switch (item.mytype) {\r\n           " +
"                                     case \"Role\":\r\n                             " +
"                       mytype = \"角色\";\r\n                                         " +
"           break;\r\n                                                case \"Post\":\r" +
"\n                                                    mytype = \"岗位\";\r\n           " +
"                                         break;\r\n                               " +
"                 case \"UserGroup\":\r\n                                            " +
"        mytype = \"用户组\";\r\n                                                    bre" +
"ak;\r\n                                                case \"User\":\r\n             " +
"                                       mytype = \"用户\";\r\n                         " +
"                           break;\r\n                                            }" +
"\r\n                                            _html += \'<div id=\"\' + item.id + \'" +
"\" data-value=\"\' + item.mytype + \'\" class=\"card-box shcemeinfocheck active\">\';\r\n " +
"                                           _html += \'    <div class=\"card-box-im" +
"g\">\';\r\n                                            _html += \'        <img src=\"/" +
"Content/images/UserCard03.png\" />\';\r\n                                           " +
" _html += \'    </div>\';\r\n                                            _html += \' " +
"   <div class=\"card-box-content\">\';\r\n                                           " +
" _html += \'        <p>名称：\' + item.text + \'</p>\';\r\n                              " +
"              _html += \'        <p>类别：\' + mytype + \'</p>\';\r\n                    " +
"                        _html += \'    </div><i></i>\';\r\n                         " +
"                   _html += \'</div>\';\r\n                                         " +
"   $item.append(_html);\r\n                                            $item.show(" +
");\r\n\r\n                                            $(\".card-box\").click(function " +
"() {\r\n                                                $(this).remove();\r\n       " +
"                                         $(\'#\' + $(this).attr(\'data-value\')).set" +
"NoCheckedNodes($(this).attr(\'id\'));\r\n                                           " +
"     if ($item.find(\'.card-box-img\').length == 0) {\r\n                           " +
"                         $item.hide();\r\n                                        " +
"        }\r\n                                            })\r\n                     " +
"                   }\r\n                                        else if (et == 0) " +
"{//取消\r\n                                            $item.find(\'#\' + item.id).rem" +
"ove();\r\n                                            if ($item.find(\'.card-box-im" +
"g\').length == 0) {\r\n                                                $item.hide()" +
";\r\n                                            }\r\n                              " +
"          }\r\n                                    }\r\n                            " +
"    };\r\n                                $(\"#\" + type).treeview(item);\r\n         " +
"                   }\r\n                        });\r\n                    },\r\n     " +
"               bind: function () {\r\n                        $.indexJs.postData.F" +
"_AuthorizeType = $(\'input[name=\"AuthorizeType\"]:checked\').val();\r\n              " +
"          if ($.indexJs.postData.F_AuthorizeType == \"1\") {\r\n                    " +
"        var _data = $(\"#Role\").getCheckedAllNodes();\r\n                          " +
"  _data.push.apply(_data, $(\"#Post\").getCheckedAllNodes());\r\n                   " +
"         _data.push.apply(_data, $(\"#UserGroup\").getCheckedAllNodes());\r\n       " +
"                     _data.push.apply(_data, $(\"#User\").getCheckedAllNodes());\r\n" +
"\r\n                            $.indexJs.step.authorizeInfo.members = String(_dat" +
"a);\r\n                            if ($.indexJs.step.authorizeInfo.members == \"\")" +
" {\r\n                                learun.dialogTop({ msg: \"请选择指定成员\", type: \"er" +
"ror\" });\r\n                            }\r\n                        }\r\n            " +
"            else {\r\n                            $.indexJs.step.authorizeInfo.mem" +
"bers = \"\";\r\n                        }\r\n                    },\r\n                 " +
"   set: function (type, data) {\r\n                        $(\'#ShcemeAuthorize\' + " +
"type).trigger(\"click\");\r\n                        $.each(data, function (i, item)" +
" {\r\n                            $(\"#Role\").setCheckedNodeOne(item.F_ObjectId);\r\n" +
"                            $(\"#Post\").setCheckedNodeOne(item.F_ObjectId);\r\n    " +
"                        $(\"#UserGroup\").setCheckedNodeOne(item.F_ObjectId);\r\n   " +
"                         $(\"#User\").setCheckedNodeOne(item.F_ObjectId);\r\n       " +
"                 });\r\n                    }\r\n                },\r\n               " +
" workFlowInfo: {\r\n                    flowDesigner: false,\r\n                    " +
"object: null,\r\n                    lineId: \"\",\r\n                    nodeFinded: " +
"[],\r\n                    content:\"\",\r\n                    initial: function () {" +
"\r\n                        $.indexJs.step.workFlowInfo.flowDesigner = $(\'#FlowPan" +
"el\').flowDesigner({\r\n                            height: ($(window).height() - 8" +
"5),\r\n                            widht: $(window).width(),\r\n                    " +
"        OpenNode: $.indexJs.step.workFlowInfo.openNode,\r\n                       " +
"     OpenLine: $.indexJs.step.workFlowInfo.openLine\r\n                        });" +
"\r\n                    },\r\n                    setFlowData: function (data) {\r\n  " +
"                      $.indexJs.step.workFlowInfo.flowDesigner.loadData(data);\r\n" +
"                    },\r\n                    bind: function (isValidate) {\r\n     " +
"                   if ($.indexJs.step.workFlowInfo.flowDesigner)\r\n              " +
"          {\r\n                            var _allForm = [];\r\n                   " +
"         var _content = $.indexJs.step.workFlowInfo.flowDesigner.exportDataEx();" +
"\r\n                            if (_content == -1) {\r\n                           " +
"     return false;\r\n                            }\r\n                            v" +
"ar _tolines = {}, node = {};\r\n                            for (var i in _content" +
".lines) {\r\n                                var item = _content.lines[i];\r\n      " +
"                          if (_tolines[item.to] == undefined) {\r\n               " +
"                     _tolines[item.to] = [];\r\n                                }\r" +
"\n                                _tolines[item.to].push(item.from);\r\n           " +
"                 }\r\n                            for (var m in _content.nodes) {\r" +
"\n                                node[_content.nodes[m].id] = _content.nodes[m];" +
"\r\n                            }\r\n                            for (var j in _cont" +
"ent.nodes) {\r\n                                $.indexJs.focusForm = [];\r\n       " +
"                         $.indexJs.step.workFlowInfo.nodeFinded = [];\r\n         " +
"                       var item = _content.nodes[j];\r\n                          " +
"      if (item.setInfo == undefined) {\r\n                                    _con" +
"tent.nodes[j].setInfo = {\r\n                                        nodeCode: ite" +
"m.id,\r\n                                        nodeMyName: item.name,\r\n         " +
"                               nodeRejectType: \"0\",\r\n                           " +
"             nodeRejectStep: \"\",\r\n                                        nodeFo" +
"rm: \"\",\r\n                                        nodeSysFn: \"\",\r\n               " +
"                         nodeDes: \"\",\r\n                                        n" +
"odeConfluenceType:\"\",\r\n                                        nodeConfluenceRat" +
"e:\"\",\r\n                                        nodeDbId: \"\",\r\n                  " +
"                      nodeSQL: \"\",\r\n                                        node" +
"Designate: \"1\",\r\n                                        nodeDesignateData: {},\r" +
"\n                                        nodeAuthorizeInfo: []\r\n                " +
"                    };\r\n                                }\r\n                     " +
"           else {\r\n                                    if (_allForm.indexOf(item" +
".setInfo.nodeForm) == -1 && item.setInfo.nodeForm != \"\")\r\n                      " +
"              {\r\n                                        _allForm.push(item.setI" +
"nfo.nodeForm);\r\n                                    }\r\n                         " +
"       }\r\n                                $.indexJs.step.workFlowInfo.findNodeFo" +
"rm(item.id, _tolines, node);\r\n                                _content.nodes[j]." +
"setInfo.formHaven = $.indexJs.focusForm;\r\n                            }\r\n       " +
"                     $.indexJs.postData[\"F_FormList\"] = String(_allForm);\r\n     " +
"                       $.indexJs.step.workFlowInfo.content = _content;\r\n        " +
"                }\r\n                        return true;\r\n                    },\r" +
"\n                    openNode: function (object) {\r\n                        $.in" +
"dexJs.step.workFlowInfo.object = object;\r\n                        var node = obj" +
"ect.$nodeData[object.$focus];\r\n                        $.indexJs.focusForm = [];" +
"\r\n                        $.indexJs.step.workFlowInfo.nodeFinded = [];\r\n        " +
"                var  _tolines = {};\r\n                        for (var i in objec" +
"t.$lineData) {\r\n                            var item = object.$lineData[i];\r\n   " +
"                         if (_tolines[item.to] == undefined) {\r\n                " +
"                _tolines[item.to] = [];\r\n                            }\r\n        " +
"                    _tolines[item.to].push(item.from);\r\n                        " +
"}\r\n                        \r\n                        $.indexJs.step.workFlowInfo" +
".findNodeForm(object.$focus, _tolines, object.$nodeData);\r\n                     " +
"   dialogOpen({\r\n                            id: \"FlowNodeForm\",\r\n              " +
"              title: \'节点设置【\' + object.$nodeData[object.$focus].name + \'】\',\r\n    " +
"                        url: \'/FlowManage/FlowDesign/FlowNodeForm\',\r\n           " +
"                 width: \"750px\",\r\n                            height: \"430px\",\r\n" +
"                            callBack: function (iframeId) {\r\n                   " +
"             top.frames[iframeId].$.formJs.acceptClick(function (nodeId, NodeSet" +
"Data) {\r\n                                    $.indexJs.step.workFlowInfo.flowDes" +
"igner.SetNodeEx(nodeId, NodeSetData);\r\n                                });\r\n    " +
"                        }\r\n                        });\r\n                    },\r\n" +
"                    openLine: function (id, object) {\r\n                        $" +
".indexJs.step.workFlowInfo.object = object;\r\n                        $.indexJs.s" +
"tep.workFlowInfo.lineId = id;\r\n                        $.indexJs.focusForm = [];" +
"\r\n                        $.indexJs.step.workFlowInfo.nodeFinded = [];\r\n        " +
"                var _tolines = {};\r\n                        for (var i in object" +
".$lineData) {\r\n                            var item = object.$lineData[i];\r\n    " +
"                        if (_tolines[item.to] == undefined) {\r\n                 " +
"               _tolines[item.to] = [];\r\n                            }\r\n         " +
"                   _tolines[item.to].push(item.from);\r\n                        }" +
"\r\n                        $.indexJs.step.workFlowInfo.findNodeForm(object.$lineD" +
"ata[id].to, _tolines, object.$nodeData);\r\n                        dialogOpen({\r\n" +
"                            id: \"FlowLineForm\",\r\n                            tit" +
"le: \'流转条件设置\',\r\n                            url: \'/FlowManage/FlowDesign/FlowLine" +
"Form\',\r\n                            width: \"750px\",\r\n                           " +
" height: \"430px\",\r\n                            callBack: function (iframeId) {\r\n" +
"                                top.frames[iframeId].$.formJs.acceptClick(functi" +
"on (lineId, lineSetData) {\r\n                                    $.indexJs.step.w" +
"orkFlowInfo.flowDesigner.SetLineEx(lineId, lineSetData);\r\n                      " +
"          });\r\n                            }\r\n                        });\r\n     " +
"               },\r\n                    findNodeForm: function (nodeId, _tolines," +
" $nodeData) {\r\n                        if (_tolines[nodeId] != undefined) {\r\n   " +
"                         for (var j in _tolines[nodeId]) {\r\n                    " +
"            var lineItem = _tolines[nodeId][j];\r\n                               " +
" if ($.indexJs.step.workFlowInfo.nodeFinded.indexOf(lineItem) == -1) {\r\n        " +
"                            if ($nodeData[lineItem].setInfo != undefined) {\r\n   " +
"                                     if ($.indexJs.focusForm.indexOf($nodeData[l" +
"ineItem].setInfo.nodeForm) == -1 && $nodeData[lineItem].setInfo.nodeForm != \"\") " +
"{\r\n                                            $.indexJs.focusForm.push($nodeDat" +
"a[lineItem].setInfo.nodeForm);\r\n                                        }\r\n     " +
"                               }\r\n                                    $.indexJs." +
"step.workFlowInfo.nodeFinded.push(lineItem);\r\n                                  " +
"  $.indexJs.step.workFlowInfo.findNodeForm(lineItem, _tolines, $nodeData);\r\n    " +
"                            }\r\n                            }\r\n                  " +
"      }\r\n                    }\r\n                }\r\n            },\r\n            b" +
"tn: {\r\n                finishBtn: function () {\r\n                    $.indexJs.p" +
"ostData[\"F_EnabledMark\"] = 1;\r\n                    $.indexJs.postData[\"F_SchemeC" +
"ontent\"] = JSON.stringify($.indexJs.step.workFlowInfo.content)\r\n                " +
"    $.SaveForm({\r\n                        url: \"../../FlowManage/FlowDesign/Save" +
"Form?keyValue=\" + $.indexJs.schemeInfoId,\r\n                        param: { \"bas" +
"eEntity\": JSON.stringify($.indexJs.postData), \"authorizeData\": $.indexJs.step.au" +
"thorizeInfo.members },\r\n                        loading: \"正在保存数据...\",\r\n         " +
"               success: function () {\r\n                            $.currentIfra" +
"me().$(\"#gridTable\").trigger(\"reloadGrid\");\r\n                        }\r\n        " +
"            });\r\n                    $.currentIframe().$(\"#gridTable\").trigger(\"" +
"reloadGrid\");\r\n                },\r\n                draftBtn: function () {\r\n    " +
"                if (!$.indexJs.step.baseInfo.bind()) {\r\n                        " +
"return false;\r\n                    }\r\n                    $.indexJs.step.authori" +
"zeInfo.bind();\r\n                    $.indexJs.postData[\"F_EnabledMark\"] = 3;\r\n  " +
"                  if ($.indexJs.step.workFlowInfo.flowDesigner)\r\n               " +
"     {\r\n                        $.indexJs.postData[\"F_SchemeContent\"] = JSON.str" +
"ingify($.indexJs.step.workFlowInfo.flowDesigner.exportData());\r\n                " +
"    }\r\n                    $.SaveForm({\r\n                        url: \"../../Flo" +
"wManage/FlowDesign/SaveForm?keyValue=\" + $.indexJs.schemeInfoId,\r\n              " +
"          param: { \"baseEntity\": JSON.stringify($.indexJs.postData), \"authorizeD" +
"ata\": $.indexJs.step.authorizeInfo.members },\r\n                        loading: " +
"\"正在保存数据...\",\r\n                        success: function () {\r\n                  " +
"          $.currentIframe().$(\"#gridTable\").trigger(\"reloadGrid\");\r\n            " +
"            }\r\n                    });\r\n                    $.currentIframe().$(" +
"\"#gridTable\").trigger(\"reloadGrid\");\r\n                }\r\n            }\r\n        " +
"};\r\n\r\n        $(function () {\r\n            $.indexJs.initialPage();\r\n        });" +
"\r\n\r\n    })(window.jQuery);\r\n</script>");

        }
    }
}
#pragma warning restore 1591
